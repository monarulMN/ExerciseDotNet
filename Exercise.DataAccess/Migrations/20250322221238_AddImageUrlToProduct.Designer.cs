// <auto-generated />
using Exercise.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercise.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250322221238_AddImageUrlToProduct")]
    partial class AddImageUrlToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exercise.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Asif"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Ali"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Ahmed"
                        });
                });

            modelBuilder.Entity("Exercise.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Belly Spark",
                            CategoryId = 1,
                            Description = "Praesent vitas sodales labriares ",
                            ISBN = "SWD99967386",
                            ImageUrl = "",
                            ListPrice = 87.0,
                            Price = 34.0,
                            Price100 = 123.0,
                            Price50 = 65.0,
                            Title = "Fortune of Time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Belly wall",
                            CategoryId = 2,
                            Description = "Praesent vitas sodales labriares ",
                            ISBN = "SWD343467386",
                            ImageUrl = "",
                            ListPrice = 45.0,
                            Price = 32.0,
                            Price100 = 143.0,
                            Price50 = 76.0,
                            Title = "Fortune of Albam"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Hardware",
                            CategoryId = 3,
                            Description = "Praesent vitas sodales labriares ",
                            ISBN = "SWD3434534386",
                            ImageUrl = "",
                            ListPrice = 23.0,
                            Price = 45.0,
                            Price100 = 154.0,
                            Price50 = 75.0,
                            Title = "Computer"
                        });
                });

            modelBuilder.Entity("Exercise.Models.Product", b =>
                {
                    b.HasOne("Exercise.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
